plugins {
    id 'com.android.application'
}

android {
    namespace 'oleksandr.kotyuk.orthodoxcalendar'
    applicationVariants.all { variant ->
        //variant.packageApplicationProvider.get().outputDirectory = new File(project.getRootDir().absolutePath + "/" + variant.buildType.name + "/")
        variant.outputs.all { output ->
            output.outputFileName = variant.flavorName + (variant.buildType.name.toLowerCase().contains("release") ? "" : "-" + variant.buildType.name) + ".apk"
        }
    }

    signingConfigs {
        release {
            def f = file("../keystore.properties")
            if (f.exists()) {
                def props = new Properties()
                f.withInputStream { props.load(it) }
                storeFile file(props.RELEASE_KEY_PATH)
                storePassword props.RELEASE_STORE_PASSWORD
                keyAlias props.RELEASE_KEY_ALIAS
                keyPassword props.RELEASE_KEY_PASSWORD
            } else {
                def writer = new FileWriter(f.path)
                writer.write("RELEASE_KEY_PATH=\n")
                writer.write("RELEASE_KEY_PASSWORD=\n")
                writer.write("RELEASE_KEY_ALIAS=\n")
                writer.write("RELEASE_STORE_PASSWORD=")
                writer.close()
                throw new IOException("File $f.name was created. please fill it by values of your release key.")
            }
        }
    }

    compileSdkVersion 33
    buildToolsVersion '33.0.0'
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 33
        versionCode 123
        versionName '1.14.33'
        signingConfig signingConfigs.release
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    flavorDimensions 'orthodoxCalendar'
    productFlavors {
        orthodoxcalendarfree {
            dimension 'orthodoxCalendar'
            applicationId "oleksandr.kotyuk.orthodoxcalendarfree"
            versionCode defaultConfig.versionCode
            versionName defaultConfig.versionName
            buildConfigField "boolean", "isPaid", "false"
        }
        orthodoxcalendarpaid {
            dimension 'orthodoxCalendar'
            applicationId "oleksandr.kotyuk.orthodoxcalendarpaid"
            versionCode defaultConfig.versionCode
            versionName defaultConfig.versionName
            buildConfigField "boolean", "isPaid", "true"
        }
    }
    sourceSets {
        main {
        }
        orthodoxcalendarpaid {
            res.srcDirs = ['res_paid']
        }
    }
}
dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.fragment:fragment:1.6.0'
    implementation 'androidx.cursoradapter:cursoradapter:1.0.0'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    implementation 'androidx.preference:preference:1.2.0'
}
configurations.implementation {
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
}
